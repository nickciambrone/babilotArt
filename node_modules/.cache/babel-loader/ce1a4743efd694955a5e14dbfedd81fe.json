{"ast":null,"code":"var _jsxFileName = \"/Users/nickciambrone/Desktop/babilotArt/src/pages/contact/contact.page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n\n  const submit = () => {\n    if (name && email && message) {\n      // TODO - send mail\n      const serviceId = 'service_lhsobpo';\n      const templateId = 'template_n91z8yj';\n      const userId = 'BvX3RwNBsra42lP-e';\n      const templateParams = {\n        name,\n        email,\n        message\n      };\n      emailjs.send(serviceId, templateId, templateParams, userId).then(response => console.log(response)).then(error => console.log(error));\n      setName('');\n      setEmail('');\n      setMessage('');\n      setEmailSent(true);\n    } else {\n      alert('Please fill in all fields.');\n    }\n  };\n\n  const isValidEmail = email => {\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"contactField\",\n      type: \"text\",\n      placeholder: \"Your Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"contactField\",\n      type: \"email\",\n      placeholder: \"Your email address\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"contactField\",\n      placeholder: \"Your message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"contactField\",\n      onClick: submit,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: emailSent ? 'visible' : null,\n      children: \"Thank you for your message, we will be in touch in no time!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contact, \"lxVxXUCTuMg48gceUqlCP15Eax8=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","emailjs","Contact","name","setName","email","setEmail","message","setMessage","emailSent","setEmailSent","submit","serviceId","templateId","userId","templateParams","send","then","response","console","log","error","alert","isValidEmail","regex","test","String","toLowerCase","e","target","value"],"sources":["/Users/nickciambrone/Desktop/babilotArt/src/pages/contact/contact.page.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport emailjs from 'emailjs-com'\n\nconst Contact = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [emailSent, setEmailSent] = useState(false);\n    const submit = () => {\n        if (name && email && message) {\n           // TODO - send mail\n           const serviceId = 'service_lhsobpo';\n           const templateId = 'template_n91z8yj';\n           const userId = 'BvX3RwNBsra42lP-e';\n           const templateParams = {\n               name,\n               email,\n               message\n           };\n\n           emailjs.send(serviceId, templateId, templateParams, userId)\n               .then(response => console.log(response))\n               .then(error => console.log(error));\n            setName('');\n            setEmail('');\n            setMessage('');\n            setEmailSent(true);\n        } else {\n            alert('Please fill in all fields.');\n        }\n    }\n    \n    const isValidEmail = email => {\n        const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return regex.test(String(email).toLowerCase());\n    };\n\n    return (\n        <div>\n        <div className = 'contact-main'></div>\n        <input className = 'contactField' type=\"text\" placeholder=\"Your Name\" value={name} onChange={e => setName(e.target.value)} />\n        <input className = 'contactField' type=\"email\" placeholder=\"Your email address\" value={email} onChange={e => setEmail(e.target.value)} />\n        <textarea className = 'contactField'  placeholder=\"Your message\" value={message} onChange={e => setMessage(e.target.value)}></textarea>\n        <button className = 'contactField'  onClick={submit}>Send Message</button>\n        <span  className={emailSent ? 'visible' : null}>Thank you for your message, we will be in touch in no time!</span>\n        </div>\n        );\n\n};\n\nexport default Contact;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,aAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;EACA,MAAMW,MAAM,GAAG,MAAM;IACjB,IAAIR,IAAI,IAAIE,KAAR,IAAiBE,OAArB,EAA8B;MAC3B;MACA,MAAMK,SAAS,GAAG,iBAAlB;MACA,MAAMC,UAAU,GAAG,kBAAnB;MACA,MAAMC,MAAM,GAAG,mBAAf;MACA,MAAMC,cAAc,GAAG;QACnBZ,IADmB;QAEnBE,KAFmB;QAGnBE;MAHmB,CAAvB;MAMAN,OAAO,CAACe,IAAR,CAAaJ,SAAb,EAAwBC,UAAxB,EAAoCE,cAApC,EAAoDD,MAApD,EACKG,IADL,CACUC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADtB,EAEKD,IAFL,CAEUI,KAAK,IAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAFnB;MAGCjB,OAAO,CAAC,EAAD,CAAP;MACAE,QAAQ,CAAC,EAAD,CAAR;MACAE,UAAU,CAAC,EAAD,CAAV;MACAE,YAAY,CAAC,IAAD,CAAZ;IACH,CAlBD,MAkBO;MACHY,KAAK,CAAC,4BAAD,CAAL;IACH;EACJ,CAtBD;;EAwBA,MAAMC,YAAY,GAAGlB,KAAK,IAAI;IAC1B,MAAMmB,KAAK,GAAG,yJAAd;IACA,OAAOA,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACrB,KAAD,CAAN,CAAcsB,WAAd,EAAX,CAAP;EACH,CAHD;;EAKA,oBACI;IAAA,wBACA;MAAK,SAAS,EAAG;IAAjB;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAO,SAAS,EAAG,cAAnB;MAAkC,IAAI,EAAC,MAAvC;MAA8C,WAAW,EAAC,WAA1D;MAAsE,KAAK,EAAExB,IAA7E;MAAmF,QAAQ,EAAEyB,CAAC,IAAIxB,OAAO,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV;IAAzG;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAO,SAAS,EAAG,cAAnB;MAAkC,IAAI,EAAC,OAAvC;MAA+C,WAAW,EAAC,oBAA3D;MAAgF,KAAK,EAAEzB,KAAvF;MAA8F,QAAQ,EAAEuB,CAAC,IAAItB,QAAQ,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;IAArH;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA;MAAU,SAAS,EAAG,cAAtB;MAAsC,WAAW,EAAC,cAAlD;MAAiE,KAAK,EAAEvB,OAAxE;MAAiF,QAAQ,EAAEqB,CAAC,IAAIpB,UAAU,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV;IAA1G;MAAA;MAAA;MAAA;IAAA,QAJA,eAKA;MAAQ,SAAS,EAAG,cAApB;MAAoC,OAAO,EAAEnB,MAA7C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALA,eAMA;MAAO,SAAS,EAAEF,SAAS,GAAG,SAAH,GAAe,IAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CA7CD;;GAAMP,O;;KAAAA,O;AA+CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}